{% extends "front/base.html.twig" %}

{% block main %}

	<div class="card mb-3 ms-5 mt-4" style="width: 18rem;">

		{% for image in car.images %}

			<img width="200px" src="{{ asset('media/' ~ image.src) }}" alt="{{ image.alt }}">

		{% endfor %}  
		<div class="card-body">
			<div class="card-body">
				<h1>{{car.name}}</h1>
				<h2>{{car.engine}}</h2>
				<h3>{{car.year}}</h3>
<a href="{{ path("car_like", {'id' : car.id}) }}" class="btn btn-link js-likes">

			{% if app.user and car.isLikeByUser(app.user) %}
				<i class="fas fa-thumbs-up"></i>
			{% else %}
				<i class="far fa-thumbs-up"></i>
			{% endif %}

			<span class="js-likes">{{ car.likes | length }}</span>
			<span class="js-label">J'aime</span>

		</a>

		<a href="{{ path("car_dislike", {'id' : car.id}) }}" class="btn btn-link js-dislikes">

			{% if app.user and car.isDislikeByUser(app.user) %}
				<i class="fas fa-thumbs-down"></i>
			{% else %}
				<i class="far fa-thumbs-down"></i>
			{% endif %}
			<span class="js-dislikes">{{ car.dislikes | length }}</span>
			<span class="js-label">Je n'aime pas</span>
		</a>				
				<a href="{{path('car_list')}}" class="btn btn-primary">Retourner aux voitures</a>
			</div>
		</div>
	{% endblock %}

  {% block js %}

	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

	<script>
		function onClickLike(event) {

event.preventDefault();

const url = this.href;
const spanCount = this.querySelector('span.js-likes');
const icone = this.querySelector('i');

axios.get(url).then(function (response) {
spanCount.textContent = response.data.likes;
if (icone.classList.contains('fas')) {
icone.classList.replace('fas', 'far')
} else {
icone.classList.replace('far', 'fas')
}
if (response.data.message == "Like ajouté et dislike supprimé") {
const spanCountDislike = document.querySelector('span.js-dislikes');
const iconeDislike = document.querySelector('i.fa-thumbs-down');

spanCountDislike.textContent = response.data.dislikes;

if (iconeDislike.classList.contains('far')) {
iconeDislike.classList.replace('far', 'fas')
} else {
iconeDislike.classList.replace('fas', 'far')
}


}
}).catch(function (error) {
if (error.response.status === 403) {
window.alert("Vous devez vous connecter")
} else {
window.alert("Une erreur s'est produite")
}
})
}

function onClickDislike(event) {
event.preventDefault();

const urlDis = this.href;
const spanCountDis = this.querySelector('span.js-dislikes');
const iconeDis = this.querySelector('i');

axios.get(urlDis).then(function (response) {
spanCountDis.textContent = response.data.dislikes;

if (iconeDis.classList.contains('fas')) {
iconeDis.classList.replace('fas', 'far');
} else {
iconeDis.classList.replace('far', 'fas');
}

if (response.data.message == "like supprimé et dislike ajouté") {
const spanCountLike = document.querySelector('span.js-likes');
const iconeLike = document.querySelector('i.fa-thumbs-up');

spanCountLike.textContent = response.data.likes;

if (iconeLike.classList.contains('fas')) {
iconeLike.classList.replace('fas', 'far');
} else {
iconeLike.classList.replace('far', 'far');
}
}

}).catch(function (error) {
if (error.response.status === 403) {
window.alert("Vous devez vous connecter")
} else {
window.alert("Une erreur s'est produite")
}
})
}


document.querySelector('a.js-likes').addEventListener('click', onClickLike);

document.querySelector('a.js-dislikes').addEventListener('click', onClickDislike);
	</script>

{% endblock %}
